server:
  port: 9101

spring:
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
        show_sql: true
        hbm2ddl:
          auto: create

sharding:
  jdbc:
    datasource:
      names: ds-0,ds-1,global
      ds-0: # 分库1
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/cool?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&useSSL=false&serverTimezone=GMT
        username: root
        password: 123456
      ds-1: #分库2
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/cool2?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&useSSL=false&serverTimezone=GMT
        username: root
        password: 123456
      global: #全局表
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/global_config?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&useSSL=false&serverTimezone=GMT
        username: root
        password: 123456
    config:
      sharding:
#        default-database-strategy:
#          inline:
#            sharding-column: id
#            algorithm-expression: ds-$->{id % 2}
        tables:
          user:
            actual-data-nodes: ds-$->{0..1}.user_$->{0..4}
            database-strategy:
              inline:
                sharding-column: id
                algorithm-expression: ds-$->{id % 2}
            table-strategy:
              inline:
                sharding-column: id
                algorithm-expression: user_$->{id % 5}
            key-generator-column-name: id
          user_info:
            actual-data-nodes: ds-$->{0..1}.user_info_$->{0..4}
            database-strategy:
              inline:
                sharding-column: user_id
                algorithm-expression: ds-$->{user_id % 2}
            table-strategy:
              inline:
                sharding-column: user_id
                algorithm-expression: user_info_$->{user_id % 5}
            key-generator-column-name: user_id
          config:
            actual-data-nodes: global.config
            database-strategy:
              none:
                any:
            table-strategy:
              none:
                any:
        binding-tables: user,user_info
      props:
        sql:
          show: true #开启实际的sql日志

logging:
  level:
    com:
      bn: debug

#mybatis:
#  config-location: classpath:META-INF/mybatis-config.xml

mybatis-plus:
  mapper-locations: classpath:META-INF/mappers/*.xml
  typeAliasesPackage: com.bn.entity
